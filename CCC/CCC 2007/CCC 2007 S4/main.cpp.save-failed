#include <iostream>
#include <fstream>
#include <set>

using namespace std;

struct Point {
    set <int> previousPoints;
};

int findNumberOfPathsRecursive (int theDestination, Point points [], int pointSize){
    int numberOfPaths = 0;

    if (theDestination == 0){
        return 1;
    }
    else {
        for (set<int>::iterator it = points[theDestination].previousPoints.begin(); it != points[theDestination].previousPoints.end(); it++){
            numberOfPaths += findNumberOfPathsRecursive(*it , points, pointSize);
        }
    }

    return numberOfPaths;
}

void test (const string& fileName){
    ifstream myFile;
    myFile.open(fileName.c_str());

    int theDestination;
    myFile >> theDestination;

    int pointOne, pointTwo;
    Point points [theDestination];
    theDestination--;

    while (true){
        Point valueHolder;
        myFile >> pointOne >> pointTwo;
        pointOne--;
        pointTwo--;

        if (pointOne == -1 && pointTwo == -1){
            break;
        }
        points[pointTwo].previousPoints.insert(pointOne);
    }
    myFile.close();

    //cout << findNumberOfPathsRecursive (theDestination, points, theDestination+1) << endl;
    cout << findNumberOfPathsRecursive (theDestination, points, theDestination+1) << endl;
}

int main() {
//    test ("C:\\Users\\ayuan\\Documents\\Computer\\CCC\\CCC 2007\\TestFiles\\s4\\s4.1.in");
//    test ("C:\\Users\\ayuan\\Documents\\Computer\\CCC\\CCC 2007\\TestFiles\\s4\\s4.2.in");
//    test ("C:\\Users\\ayuan\\Documents\\Computer\\CCC\\CCC 2007\\TestFiles\\s4\\s4.3.in");
    test ("C:\\Users\\ayuan\\Documents\\Computer\\CCC\\CCC 2007\\TestFiles\\s4\\s4.4.in");
//    test ("C:\\Users\\ayuan\\Documents\\Computer\\CCC\\CCC 2007\\TestFiles\\s4\\s4.5.in");

    return 0;
}
